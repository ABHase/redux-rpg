{"version":3,"sources":["features/animatedTile/chest.png","features/animatedTile/tree.png","features/player/sprite_shet_progress2.png","features/player2/sprite_shet_progress2.png","features/player/reducer.js","features/map/reducer.js","features/player2/reducer.js","features/animatedTile/reducer.js","config/store.js","config/constant.js","features/animatedTile/index.js","features/animatedTile/tree.js","features/map/index.js","data/maps/2/index.js","features/player/index.js","features/player/movement.js","features/player2/dialogue.js","features/player2/index.js","features/player2/movement.js","features/world/index.js","App.js","index.js"],"names":["module","exports","initialState","position","facingPosition","spriteLocation","direction","walkIndex","health","playerReducer","state","action","type","payload","tiles","mapReducer","dialogue","player2Reducer","chestReducer","rootReducer","combineReducers","player","player2","map","chest","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","SPRITE_HEIGHT","SPRITE_WIDTH","MAP_HEIGHT","MAP_WIDTH","connect","props","style","backgroundImage","backgroundPosition","width","height","Tree","bottom","left","flexShrink","zIndex","tree","MapTile","className","getTileSprite","tile","MapRow","border","fontSize","row","observerBoundaries","oldPos","newPos","observeImpassable","getState","y","x","interact","facing","otherPlayerPos","otherPlayerY","otherPlayerX","interactTile","dispatch","setTimeout","dispatchMove","getWalkIndex","getSpriteLocation","dispatchAttack","compareLocations","determineFacing","updateFacing","attemptMove","getNewPosition","addEventListener","e","preventDefault","keyCode","console","log","handleKeyDown","handleMovement","top","walkSprite","c","HEIGHT","WIDTH","MAX_ROOMS","ROOM_SIZE_RANGE","isValidRoomPlacement","length","i","j","push","createRoomsFromSeed","range","min","max","roomValues","north","_","random","doorx","Math","doory","east","south","west","placedRooms","forEach","room","placeCells","firstRoom","growMap","seedRooms","counter","maxRooms","pop","backgroundColor","onClick","randomDirection","setInterval","floor","World","margin","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c64a6320.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chest.6734d051.png\";","module.exports = __webpack_public_path__ + \"static/media/tree.acb47eac.png\";","module.exports = __webpack_public_path__ + \"static/media/sprite_shet_progress2.e96236c5.png\";","module.exports = __webpack_public_path__ + \"static/media/sprite_shet_progress2.e96236c5.png\";","const initialState = {\r\n  position: [0, 0],\r\n  facingPosition: [0, 75],\r\n  spriteLocation: '0 0',\r\n  direction: 'SOUTH',\r\n  walkIndex: 1,\r\n  health: 10,\r\n}\r\n\r\nconst playerReducer = (state=initialState, action) => {\r\n  switch(action.type) {\r\n    case 'MOVE_PLAYER':{\r\n      return {...state, ...action.payload};\r\n    }\r\n    case 'ATTACK_PLAYER2':{\r\n      return {...state, ...action.payload};\r\n    }\r\n      \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default playerReducer","const initialState = {\r\n  tiles: [],\r\n}\r\n\r\nconst mapReducer = (state=initialState, action) => {\r\n  switch(action.type) {\r\n    case 'ADD_TILES':\r\n      return {\r\n        ...action.payload\r\n      } \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default mapReducer","const initialState = {\r\n  position: [200, 0],\r\n  spriteLocation: '0 0',\r\n  direction: 'east',\r\n  walkIndex: 0,\r\n  health: 10,\r\n  dialogue: false,\r\n}\r\n\r\nconst player2Reducer = (state=initialState, action) => {\r\n  switch(action.type) {\r\n    case 'MOVE_PLAYER2':{\r\n      return {...state, ...action.payload};\r\n    }\r\n    case 'ATTACK_PLAYER':{\r\n      return {...state, ...action.payload};\r\n    }\r\n    case 'DIALOGUE':{\r\n      return {...state, dialogue: false}\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default player2Reducer","\r\nconst initialState = {\r\n  spriteLocation: `200px 0px`,\r\n}\r\n\r\n// const chestReducer = (state=initialState, action) => {\r\n//   return{\r\n//     type: 'ANIMATE_STATIC',\r\n//     spriteLocation: `400px 0px`\r\n//   }\r\n// }\r\n\r\n\r\n\r\nconst chestReducer = (state=initialState, action) => {\r\n  switch(action.type) {\r\n    case 'ANIMATE_STATIC':{\r\n      return {...state, \r\n        spriteLocation: `400px 0px`\r\n        };\r\n    }\r\n    case 'ANIMATE_STATIC2':{\r\n      return {...state, \r\n        spriteLocation: `600px 0px`\r\n        };\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default chestReducer","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport playerReducer from '../features/player/reducer'\r\nimport mapReducer from '../features/map/reducer'\r\nimport player2Reducer from '../features/player2/reducer'\r\nimport chestReducer from '../features/animatedTile/reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  player: playerReducer,\r\n  player2: player2Reducer,\r\n  map: mapReducer,\r\n  chest: chestReducer\r\n})\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancer(applyMiddleware(thunk)),\r\n  );\r\n\r\nexport default store","export const SPRITE_HEIGHT = 360\r\nexport const SPRITE_WIDTH = 200\r\nexport const MAP_HEIGHT = SPRITE_HEIGHT * 10\r\nexport const MAP_WIDTH = SPRITE_WIDTH * 20","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport chest from './chest.png'\r\nimport animateTile from './animate'\r\n\r\nfunction Chest(props) {\r\n  return (\r\n    <div\r\n    style={{\r\n      position: 'absolute',\r\n      backgroundImage: `url('${chest}')`,\r\n      backgroundPosition: props.spriteLocation,\r\n      width: '200px',\r\n      height: '360px',\r\n\r\n    }}\r\n    />\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.chest,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(animateTile(Chest))","import React from 'react'\r\nimport tree from './tree.png'\r\n\r\nfunction Tree() {\r\n  return (\r\n    <div\r\n    style={{\r\n      position: 'relative',\r\n      bottom: '1080px',\r\n      left: '-320px',\r\n      flexShrink: '0',\r\n      zIndex: 1,\r\n      width:'800px',\r\n      height: '1440px',\r\n      backgroundImage: `url('${tree}')`,\r\n    }}\r\n    />\r\n  )\r\n}\r\n\r\n\r\nexport default Tree","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Chest from '../animatedTile'\r\nimport Tree from '../animatedTile/tree'\r\nimport {SPRITE_HEIGHT, SPRITE_WIDTH} from '../../config/constant'\r\n\r\nimport './styles.css'\r\n\r\nfunction MapTile(props) {\r\n  return <div \r\n  className={`tile ${getTileSprite(props.tile)}`}\r\n  style={{\r\n    height: SPRITE_HEIGHT,\r\n    width: SPRITE_WIDTH,\r\n  }}\r\n  >\r\n    {props.tile}\r\n    {getTileSprite(props.tile)}\r\n  </div>\r\n}\r\n\r\nfunction getTileSprite(type) {\r\n  switch(type) {\r\n    case 0:\r\n      return 'grass'\r\n    case 1:\r\n      return 'black'\r\n    case 2:\r\n      return <Chest />\r\n    case 3:\r\n      return 'door'\r\n    case 5:\r\n      return 'rock'\r\n    case 6:\r\n      return <Tree />\r\n    case 7:\r\n      return 'rock2'\r\n    default:\r\n  }\r\n}\r\n\r\nfunction MapRow(props) {\r\n  return <div className=\"row\">\r\n    {\r\n      props.tiles.map( tile => <MapTile tile={tile} />)\r\n    }\r\n  </div>\r\n}\r\n\r\nfunction Map(props) {\r\n  return (\r\n    <div\r\n    style={{\r\n      position:'absolute',\r\n      width: '4000px',\r\n      height: '3600px',\r\n      border: '4px solid white',\r\n      fontSize: 48,\r\n    }}      \r\n    >\r\n\r\n      {\r\n        props.tiles.map( row => <MapRow tiles={row} />)\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    tiles: state.map.tiles,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Map)","import _ from 'lodash'\r\n\r\nconst HEIGHT = 10;\r\nconst WIDTH = 20;\r\nconst MAX_ROOMS = 10;\r\nconst ROOM_SIZE_RANGE = [2, 6];\r\n\r\nconst c= { HEIGHT, WIDTH, MAX_ROOMS, ROOM_SIZE_RANGE};\r\n\r\nconst isValidRoomPlacement = (tiles, {x, y, width = 1, height = 1}) => {\r\n  // check if on the edge of or outside of the grid\r\n  if (y < 1 || y + height > tiles.length - 1) {\r\n    return false;\r\n  }\r\n  if (x < 1 || x + width > tiles[0].length - 1) {\r\n    return false;\r\n  }\r\n\r\n  // check if on or adjacent to existing room\r\n  for (let i = y - 1; i < y + height + 1; i++) {\r\n    for (let j = x - 1; j < x + width + 1; j++) {\r\n      if (tiles[i][j] === 1) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  // all grid cells are clear\r\n  return true;\r\n};\r\n\r\n\r\nlet tiles = [];\r\nfor (let i = 0; i < c.HEIGHT; i++) {\r\n  tiles.push([]);\r\n  for (let j = 0; j < c.WIDTH; j++) {\r\n    tiles[i].push(5)\r\n  }\r\n}\r\n\r\nconst createRoomsFromSeed = (tiles, {x, y, width, height}, range = c.ROOM_SIZE_RANGE) => {\r\n  // range for generating the random room heights and widths\r\n  const [min, max] = range;\r\n\r\n  // generate room values for each edge of the seed room\r\n  const roomValues = [];\r\n\r\n  const north = { height: _.random(min, max), width: _.random(min, max) };\r\n  north.x = _.random(x, x + width - 1);\r\n  north.y = y - north.height - 1;\r\n  north.doorx = _.random(north.x, (Math.min(north.x + north.width, x + width)) - 1);\r\n  north.doory = y - 1;\r\n  roomValues.push(north);\r\n\r\n  const east = { height: _.random(min, max), width: _.random(min, max) };\r\n  east.x = x + width + 1;\r\n  east.y = _.random(y, height + y - 1);\r\n  east.doorx = east.x - 1;\r\n  east.doory = _.random(east.y, (Math.min(east.y + east.height, y + height)) - 1);\r\n  roomValues.push(east);\r\n\r\n  const south = { height: _.random(min, max), width: _.random(min, max) };\r\n  south.x = _.random(x, width + x - 1);\r\n  south.y = y + height + 1;\r\n  south.doorx = _.random(south.x, (Math.min(south.x + south.width, x + width)) - 1);\r\n  south.doory = y + height;\r\n  roomValues.push(south);\r\n\r\n  const west = { height: _.random(min, max), width: _.random(min, max) };\r\n  west.x = x - west.width - 1;\r\n  west.y = _.random(y, height + y - 1);\r\n  west.doorx = x - 1;\r\n  west.doory = _.random(west.y, (Math.min(west.y + west.height, y + height)) - 1);\r\n  roomValues.push(west);\r\n\r\n  const placedRooms = [];\r\n  roomValues.forEach(room => {\r\n    if (isValidRoomPlacement(tiles, room)) {\r\n      // place room\r\n      tiles = placeCells(tiles, room);\r\n      // place door\r\n      tiles = placeCells(tiles, {x: room.doorx, y: room.doory}, 3);\r\n      // need placed room values for the next seeds\r\n      placedRooms.push(room);\r\n    }\r\n  });\r\n  return {tiles, placedRooms};\r\n};\r\n\r\nconst placeCells = (tiles, {x, y, width = 1, height = 1,}, tile = 1) => {\r\n  for (let i = y; i < y + height; i++) {\r\n    for (let j = x; j < x + width; j++) {\r\n      tiles[i][j] = tile;\r\n    }\r\n  }\r\n  return tiles;}\r\n\r\n\t// 2. random values for the first area\r\n\t// const [min, max] = c.ROOM_SIZE_RANGE;\r\n\t// const firstRoom = {\r\n\t// \tx: _.random(1, c.WIDTH - max - 5),\r\n\t// \ty: _.random(1, c.HEIGHT - max - 5),\r\n\t// \theight: _.random(min, max),\r\n\t// \twidth: _.random(min, max)\r\n  // };\r\n\r\n  const firstRoom = {\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t\theight: 2,\r\n\t\twidth: 2\r\n  };\r\n\r\n\r\n  tiles = placeCells(tiles, firstRoom);\r\n\r\n//  4. using the first room as a seed, recursivley add rooms to the grid\r\nconst growMap = (tiles, seedRooms, counter = 1, maxRooms = c.MAX_ROOMS) => {\r\n  if (counter + seedRooms.length > maxRooms || !seedRooms.length) {\r\n    return tiles;\r\n  }\r\n\r\n  tiles = createRoomsFromSeed(tiles, seedRooms.pop());\r\n  seedRooms.push(...tiles.placedRooms);\r\n  counter += tiles.placedRooms.length;\r\n  return growMap(tiles.tiles, seedRooms, counter);\r\n};\r\ngrowMap(tiles, [firstRoom]);\r\n\r\nexport {tiles}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const tiles = [\r\n//   Array.from({length: 20}, () => Math.floor(Math.random() * 2)),\r\n//   Array.from({length: 20}, () => Math.floor(Math.random() * 2)),\r\n//   Array.from({length: 20}, () => Math.floor(Math.random() * 2)),\r\n//   Array.from({length: 20}, () => Math.floor(Math.random() * 2)),\r\n//   Array.from({length: 20}, () => Math.floor(Math.random() * 2)),\r\n//   Array.from({length: 20}, () => Math.floor(Math.random() * 2)),\r\n//   Array.from({length: 20}, () => Math.floor(Math.random() * 2)),\r\n//   Array.from({length: 20}, () => Math.floor(Math.random() * 2)),\r\n//   Array.from({length: 20}, () => Math.floor(Math.random() * 2)),\r\n//   Array.from({length: 20}, () => Math.floor(Math.random() * 2)),\r\n// ]","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport walkSprite from './sprite_shet_progress2.png'\r\nimport handleMovement from './movement'\r\n\r\nfunction Player(props) {\r\n  return (\r\n    <div\r\n    style={{\r\n      position: 'absolute',\r\n      top: props.position[1],\r\n      left: props.position[0],\r\n      backgroundImage: `url('${walkSprite}')`,\r\n      backgroundPosition: props.spriteLocation,\r\n      width: '200px',\r\n      height: '360px',\r\n\r\n    }}\r\n    />\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.player,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(handleMovement(Player))","import store from \"../../config/store\";\r\nimport {\r\n  SPRITE_HEIGHT,\r\n  SPRITE_WIDTH,\r\n  MAP_WIDTH,\r\n  MAP_HEIGHT\r\n} from \"../../config/constant\";\r\n\r\nexport default function handleMovement(player) {\r\n  \r\n  function getNewPosition(oldPos, direction) {\r\n    switch (direction) {\r\n      case \"WEST\":\r\n        return [oldPos[0] - SPRITE_WIDTH, oldPos[1]];\r\n      case \"EAST\":\r\n        return [oldPos[0] + SPRITE_WIDTH, oldPos[1]];\r\n      case \"NORTH\":\r\n        return [oldPos[0], oldPos[1] - SPRITE_HEIGHT];\r\n      case \"SOUTH\":\r\n        return [oldPos[0], oldPos[1] + SPRITE_HEIGHT];\r\n      default:\r\n    }\r\n  }\r\n\r\n  function observerBoundaries(oldPos, newPos) {\r\n    return (\r\n      newPos[0] >= 0 &&\r\n      newPos[0] <= MAP_WIDTH - SPRITE_WIDTH &&\r\n      (newPos[1] >= 0 && newPos[1] <= MAP_HEIGHT - SPRITE_HEIGHT)\r\n    );\r\n  }\r\n\r\n  function observeImpassable(oldPos, newPos) {\r\n    const tiles = store.getState().map.tiles;\r\n    const y = newPos[1] / SPRITE_HEIGHT;\r\n    const x = newPos[0] / SPRITE_WIDTH;\r\n    const nextTile = tiles[y][x];\r\n    return nextTile < 5;\r\n  }\r\n\r\n  function interact() {\r\n    const tiles = store.getState().map.tiles;\r\n    const facing = store.getState().player.facingPosition;\r\n    const otherPlayerPos = store.getState().player2.position;\r\n    const otherPlayerY = otherPlayerPos[1];\r\n    const otherPlayerX = otherPlayerPos[0];\r\n\r\n    let y = facing[1] / SPRITE_HEIGHT;\r\n    if (y < 0) y = 0;\r\n    let x = facing[0] / SPRITE_WIDTH;\r\n    if (x < 0) x = 0;\r\n    const interactTile = tiles[y][x];\r\n    if (facing[0] === otherPlayerX && facing[1] === otherPlayerY) {\r\n      store.dispatch({\r\n        type: \"ATTACK_PLAYER\",\r\n        payload: {\r\n          dialogue: true,\r\n        }\r\n      })}  else if (interactTile === 2){animateTile()}\r\n      else return\r\n  }\r\n\r\n  // function delayedDispatch(direction, newPos) {\r\n  //   setTimeout(() => \r\n  //   {\r\n  //   const walkIndex = getWalkIndex();\r\n  //   store.dispatch({\r\n  //     type: \"MOVE_PLAYER\",\r\n  //     payload: {\r\n  //       position: newPos,\r\n  //       direction,\r\n  //       walkIndex,\r\n  //       spriteLocation: getSpriteLocation(direction, walkIndex),\r\n  //     }\r\n  //   });\r\n  // }\r\n  //   , 1000);}\r\n\r\n\r\n  function dispatchMove(direction, newPos) {\r\n    const walkIndex = getWalkIndex();\r\n    store.dispatch({\r\n      type: \"MOVE_PLAYER\",\r\n      payload: {\r\n        position: newPos,\r\n        direction,\r\n        walkIndex,\r\n        spriteLocation: getSpriteLocation(direction, walkIndex),\r\n      }\r\n    });\r\n  }\r\n\r\n  function dispatchAttack() {\r\n    const health = getHealth();\r\n    store.dispatch({\r\n      type: \"ATTACK_PLAYER\",\r\n      payload: {\r\n        health\r\n      }\r\n    });\r\n  }\r\n\r\n  function getHealth() {\r\n    const health = store.getState().player2.health;\r\n    return health - 1;\r\n  }\r\n\r\n  function compareLocations(newPos) {\r\n    const otherPlayerPos = store.getState().player2.position;\r\n    const otherPlayerY = otherPlayerPos[1];\r\n    const otherPlayerX = otherPlayerPos[0];\r\n    return newPos[1] === otherPlayerY && newPos[0] === otherPlayerX;\r\n  }\r\n\r\n  function determineFacing(){\r\n    let direction = store.getState().player.direction;\r\n    let position = store.getState().player.position;\r\n    switch (direction){\r\n      case \"SOUTH\":\r\n        return [position[0],position[1]+SPRITE_HEIGHT]\r\n      case \"NORTH\":\r\n        return [position[0],position[1]-SPRITE_HEIGHT]\r\n      case \"EAST\":\r\n        return [position[0]+SPRITE_WIDTH,position[1]]\r\n      case \"WEST\":\r\n        return [position[0]-SPRITE_WIDTH,position[1]]\r\n      default:\r\n    }\r\n  }\r\n\r\n  function updateFacing(oldPos, direction){\r\n    store.dispatch({\r\n      type: \"MOVE_PLAYER\",\r\n      payload: {\r\n        facingPosition: determineFacing()\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n    // function delayedDispatch(direction, newPos) {\r\n  //   setTimeout(() => \r\n  //   {\r\n  //   const walkIndex = getWalkIndex();\r\n  //   store.dispatch({\r\n  //     type: \"MOVE_PLAYER\",\r\n  //     payload: {\r\n  //       position: newPos,\r\n  //       direction,\r\n  //       walkIndex,\r\n  //       spriteLocation: getSpriteLocation(direction, walkIndex),\r\n  //     }\r\n  //   });\r\n  // }\r\n  //   , 1000);}\r\n\r\n  function attemptMove(direction) {\r\n\r\n    setTimeout(() => \r\n    {    const oldPos = store.getState().player.position;\r\n    const newPos = getNewPosition(oldPos, direction);\r\n    const walkIndex = store.getState().player.walkIndex;\r\n\r\n    store.dispatch({\r\n      type: \"MOVE_PLAYER\",\r\n      payload: {\r\n        direction,\r\n        spriteLocation: getSpriteLocation(direction, walkIndex),\r\n        facingPosition: determineFacing()\r\n      }\r\n    })\r\n\r\n    if (\r\n      observerBoundaries(oldPos, newPos) &&\r\n      observeImpassable(oldPos, newPos) &&\r\n      !compareLocations(newPos)\r\n    ) {\r\n      dispatchMove(direction, newPos);\r\n      updateFacing();\r\n    } else if (\r\n      observerBoundaries(oldPos, newPos) &&\r\n      observeImpassable(oldPos, newPos) &&\r\n      compareLocations(newPos)\r\n    ) {\r\n      dispatchAttack();\r\n      updateFacing();\r\n    }\r\n      }, 30);\r\n    }\r\n\r\n  function handleKeyDown(e) {\r\n    e.preventDefault();\r\n    switch (e.keyCode) {\r\n      case 32: \r\n        return interact()\r\n      case 37:\r\n        return attemptMove(\"WEST\");\r\n      case 38:\r\n        return attemptMove(\"NORTH\");\r\n      case 39:\r\n        return attemptMove(\"EAST\");\r\n      case 40:\r\n        return attemptMove(\"SOUTH\");\r\n      default:\r\n        console.log(e.keyCode);\r\n    }\r\n  }\r\n\r\n  //   function startRandomMovement(e) {\r\n  //     let randomDirection = [\"SOUTH\", \"NORTH\", \"EAST\", \"WEST\"]\r\n  //     e.preventDefault();\r\n  //     if (e) {\r\n  //       setInterval(()=>{attemptMove(randomDirection[Math.floor(Math.random()*randomDirection.length)])}, 1000)\r\n  //   }\r\n  // }\r\n\r\n\r\n  // function animate(direction, walkIndex){\r\n  //   setTimeout(() => \r\n  //   { getSpriteLocation(direction, walkIndex); \r\n  //   }, 100);}\r\n\r\n  function getSpriteLocation(direction, walkIndex) {\r\n    switch (direction) {\r\n      case \"NORTH\":\r\n        return `${SPRITE_WIDTH * walkIndex}px ${SPRITE_HEIGHT * 1}px`;\r\n      case \"EAST\":\r\n        return `${SPRITE_WIDTH * walkIndex}px ${SPRITE_HEIGHT * 2}px`;\r\n      case \"WEST\":\r\n        return `${SPRITE_WIDTH * walkIndex}px ${SPRITE_HEIGHT * 3}px`;\r\n      case \"SOUTH\":\r\n        return `${SPRITE_WIDTH * walkIndex}px ${SPRITE_HEIGHT * 4}px`;\r\n      default:\r\n    }\r\n  }\r\n\r\n  function getWalkIndex() {\r\n    const walkIndex = store.getState().player.walkIndex;\r\n    return walkIndex >= 2 ? 1 : walkIndex + 1;\r\n  }\r\n\r\n  window.addEventListener(\"keydown\", e => {\r\n    handleKeyDown(e);\r\n  });\r\n\r\n  function animateTile(){\r\n    store.dispatch(function (dispatch) {\r\n      setTimeout(() => { \r\n        dispatch({type:'ANIMATE_STATIC'})\r\n      }, 500)\r\n      setTimeout(() => { \r\n        dispatch({type:'ANIMATE_STATIC2'})\r\n      }, 1000)\r\n    })\r\n  }\r\n  return player;\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction Dialogue(props){\r\n  return (\r\n    <div\r\n    style={{\r\n      position: 'absolute',\r\n      top: props.position[1],\r\n      left: props.position[0],\r\n      backgroundColor: 'brown',\r\n      width: '800px',\r\n      height: '720px',\r\n    }}>\r\n      <button\r\n      onClick={() => props.dispatch({ type: 'DIALOGUE'})}\r\n      style={{\r\n        fontSize: 72,\r\n      }}\r\n      >X</button>\r\n      <p style={{fontSize: 50}}>Now I can start and stop but I seem to take some time about stopping</p>\r\n      </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.player2,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dialogue)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport walkSprite from './sprite_shet_progress2.png'\r\nimport handleMovement from './movement'\r\nimport Dialogue from './dialogue'\r\n\r\nfunction Player2(props) {\r\n  return (\r\n    <div>\r\n    <div\r\n    style={{\r\n      position: 'absolute',\r\n      top: props.position[1],\r\n      left: props.position[0],\r\n      backgroundImage: `url('${walkSprite}')`,\r\n      backgroundPosition: props.spriteLocation,\r\n      width: '200px',\r\n      height: '360px',\r\n\r\n    }}\r\n    />\r\n    { props.dialogue ? <Dialogue /> : null }\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.player2,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(handleMovement(Player2))","import store from \"../../config/store\";\r\nimport {\r\n  SPRITE_HEIGHT,\r\n  SPRITE_WIDTH,\r\n  MAP_WIDTH,\r\n  MAP_HEIGHT\r\n} from \"../../config/constant\";\r\n\r\nexport default function handleMovement(player2) {\r\n  function getNewPosition(oldPos, direction) {\r\n    switch (direction) {\r\n      case \"WEST\":\r\n        return [oldPos[0] - SPRITE_WIDTH, oldPos[1]];\r\n      case \"EAST\":\r\n        return [oldPos[0] + SPRITE_WIDTH, oldPos[1]];\r\n      case \"NORTH\":\r\n        return [oldPos[0], oldPos[1] - SPRITE_HEIGHT];\r\n      case \"SOUTH\":\r\n        return [oldPos[0], oldPos[1] + SPRITE_HEIGHT];\r\n      default:\r\n    }\r\n  }\r\n\r\n  function observerBoundaries(oldPos, newPos) {\r\n    return (\r\n      newPos[0] >= 0 &&\r\n      newPos[0] <= MAP_WIDTH - SPRITE_WIDTH &&\r\n      (newPos[1] >= 0 && newPos[1] <= MAP_HEIGHT - SPRITE_HEIGHT)\r\n    );\r\n  }\r\n\r\n  function observeImpassable(oldPos, newPos) {\r\n    const tiles = store.getState().map.tiles;\r\n    const y = newPos[1] / SPRITE_HEIGHT;\r\n    const x = newPos[0] / SPRITE_WIDTH;\r\n    const nextTile = tiles[y][x];\r\n    return nextTile < 5;\r\n  }\r\n\r\n  function dispatchMove(direction, newPos) {\r\n    const walkIndex = getWalkIndex();\r\n    store.dispatch({\r\n      type: \"MOVE_PLAYER2\",\r\n      payload: {\r\n        position: newPos,\r\n        direction,\r\n        walkIndex,\r\n        spriteLocation: getSpriteLocation(direction, walkIndex)\r\n      }\r\n    });\r\n  }\r\n\r\n  function dispatchAttack() {\r\n    const health = getHealth();\r\n    store.dispatch({\r\n      type: \"ATTACK_PLAYER2\",\r\n      payload: {\r\n        health\r\n      }\r\n    });\r\n  }\r\n\r\n  function getHealth() {\r\n    const health = store.getState().player.health;\r\n    return health - 1;\r\n  }\r\n\r\n  function compareLocations(newPos) {\r\n    const otherPlayerPos = store.getState().player.position;\r\n    const otherPlayerY = otherPlayerPos[1];\r\n    const otherPlayerX = otherPlayerPos[0];\r\n    return newPos[1] === otherPlayerY && newPos[0] === otherPlayerX;\r\n  }\r\n\r\n  function attemptMove(direction) {\r\n    const oldPos = store.getState().player2.position;\r\n    const newPos = getNewPosition(oldPos, direction);\r\n\r\n    if (\r\n      observerBoundaries(oldPos, newPos) &&\r\n      observeImpassable(oldPos, newPos) &&\r\n      !compareLocations(newPos)\r\n    ) {\r\n      dispatchMove(direction, newPos);\r\n    } else if (\r\n      observerBoundaries(oldPos, newPos) &&\r\n      observeImpassable(oldPos, newPos) &&\r\n      compareLocations(newPos)\r\n    ) {\r\n      dispatchAttack();\r\n    }\r\n  }\r\n\r\n  // function handleKeyDown(e) {\r\n  //   e.preventDefault();\r\n  //   switch (e.keyCode) {\r\n  //     case 37:\r\n  //       return attemptMove(\"WEST\");\r\n  //     case 38:\r\n  //       return attemptMove(\"NORTH\");\r\n  //     case 39:\r\n  //       return attemptMove(\"EAST\");\r\n  //     case 40:\r\n  //       return attemptMove(\"SOUTH\");\r\n  //     default:\r\n  //       console.log(e.keyCode);\r\n  //   }\r\n  // }\r\n\r\n  // function startPlayer2(e) {\r\n  //   e.preventDefault();\r\n  //   if (e) {startRandomMovement()}\r\n  // }\r\n  \r\n  const randomDirection = [\"SOUTH\", \"NORTH\", \"EAST\", \"WEST\"];\r\n    const intervalID = setInterval(() => {\r\n        testing(\r\n          randomDirection[Math.floor(Math.random() * randomDirection.length)]\r\n        );\r\n      }, 500);\r\n\r\n  function testing() {\r\n    let isMoving = store.getState().player2.dialogue;\r\n    if (!isMoving){\r\n    setTimeout(() => {\r\n          attemptMove(\r\n            randomDirection[Math.floor(Math.random() * randomDirection.length)]\r\n          );\r\n        }, 2000);\r\n  }\r\n};\r\n  \r\n\r\n  function getSpriteLocation(direction, walkIndex) {\r\n    switch (direction) {\r\n      case \"NORTH\":\r\n        return `${SPRITE_WIDTH * walkIndex}px ${SPRITE_HEIGHT * 1}px`;\r\n      case \"EAST\":\r\n        return `${SPRITE_WIDTH * walkIndex}px ${SPRITE_HEIGHT * 2}px`;\r\n      case \"WEST\":\r\n        return `${SPRITE_WIDTH * walkIndex}px ${SPRITE_HEIGHT * 3}px`;\r\n      case \"SOUTH\":\r\n        return `${SPRITE_WIDTH * walkIndex}px ${SPRITE_HEIGHT * 4}px`;\r\n      default:\r\n    }\r\n  }\r\n\r\n  function getWalkIndex() {\r\n    const walkIndex = store.getState().player2.walkIndex;\r\n    return walkIndex >= 2 ? 0 : walkIndex + 1;\r\n  }\r\n\r\n  // window.onload = startRandomMovement();\r\n\r\n  return player2;\r\n}\r\n","import React from \"react\";\r\nimport Map from \"../map\";\r\nimport Player from \"../player\";\r\n\r\nimport { tiles } from '../../data/maps/2'\r\nimport store from '../../config/store'\r\nimport Player2 from \"../player2\";\r\n\r\nfunction World(props) {\r\n  store.dispatch({type: 'ADD_TILES', payload: {\r\n    tiles,\r\n  }})\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        width: \"4000px\",\r\n        height: \"3600px\",\r\n        margin: \"20px auto\"\r\n      }}\r\n    >\r\n      <Map />\r\n      <Player />\r\n      <Player2 />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default World;\r\n","import React from \"react\";\nimport World from \"./features/world\";\n\nfunction App() {\n  return (\n    <div>\n      <World />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n\nimport store from './config/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}