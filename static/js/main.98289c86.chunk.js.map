{"version":3,"sources":["features/animatedTile/chest.png","features/animatedTile/tree.png","features/player/sprite_shet_progress2.png","features/player2/sprite_shet_progress2.png","features/player/reducer.js","features/map/reducer.js","features/player2/reducer.js","features/animatedTile/reducer.js","config/store.js","config/constant.js","features/animatedTile/index.js","features/animatedTile/tree.js","features/map/index.js","data/maps/2/index.js","data/maps/1/index.js","features/player/index.js","features/player/movement.js","features/world/DisplayLevel.js","features/player2/dialogue.js","features/player2/index.js","features/player2/movement.js","features/world/index.js","App.js","index.js"],"names":["module","exports","initialState","position","facingPosition","spriteLocation","direction","walkIndex","health","playerReducer","state","action","type","payload","tiles","level","mapReducer","dialogue","player2Reducer","chestReducer","rootReducer","combineReducers","player","player2","map","chest","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","SPRITE_HEIGHT","SPRITE_WIDTH","MAP_HEIGHT","MAP_WIDTH","connect","props","style","backgroundImage","backgroundPosition","width","height","Tree","bottom","left","flexShrink","zIndex","tree","MapTile","className","getTileSprite","tile","MapRow","border","fontSize","row","c","HEIGHT","WIDTH","MAX_ROOMS","ROOM_SIZE_RANGE","createDungeon","isValidRoomPlacement","x","y","length","i","j","push","createRoomsFromSeed","range","min","max","roomValues","north","_","random","doorx","Math","doory","east","south","west","placedRooms","forEach","room","placeCells","firstRoom","growMap","seedRooms","counter","maxRooms","pop","stairs","floor","dispatch","tilesMapOne","observerBoundaries","oldPos","newPos","observeImpassable","getState","interact","facing","otherPlayerPos","otherPlayerY","otherPlayerX","interactTile","setTimeout","dispatchMove","getWalkIndex","getSpriteLocation","dispatchAttack","compareLocations","determineFacing","updateFacing","attemptMove","getNewPosition","handleKeyDown","e","preventDefault","keyCode","pos","currentPos","sessionStorage","setItem","JSON","stringify","parse","getItem","console","log","addEventListener","handleMovement","top","walkSprite","color","backgroundColor","onClick","randomDirection","setInterval","World","margin","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98289c86.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chest.6734d051.png\";","module.exports = __webpack_public_path__ + \"static/media/tree.acb47eac.png\";","module.exports = __webpack_public_path__ + \"static/media/sprite_shet_progress2.e96236c5.png\";","module.exports = __webpack_public_path__ + \"static/media/sprite_shet_progress2.e96236c5.png\";","const initialState = {\r\n  position: [0, 0],\r\n  facingPosition: [0, 75],\r\n  spriteLocation: '0 0',\r\n  direction: 'SOUTH',\r\n  walkIndex: 1,\r\n  health: 10,\r\n}\r\n\r\nconst playerReducer = (state=initialState, action) => {\r\n  switch(action.type) {\r\n    case 'MOVE_PLAYER':{\r\n      return {...state, ...action.payload};\r\n    }\r\n    case 'ATTACK_PLAYER2':{\r\n      return {...state, ...action.payload};\r\n    }\r\n      \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default playerReducer","const initialState = {\r\n  tiles: [],\r\n  level: 1,\r\n}\r\n\r\nconst mapReducer = (state=initialState, action) => {\r\n  switch(action.type) {\r\n    case 'ADD_TILES':\r\n      return {\r\n        ...state, ...action.payload\r\n      } \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default mapReducer","const initialState = {\r\n  position: [200, 0],\r\n  spriteLocation: '0 0',\r\n  direction: 'east',\r\n  walkIndex: 0,\r\n  health: 10,\r\n  dialogue: false,\r\n}\r\n\r\nconst player2Reducer = (state=initialState, action) => {\r\n  switch(action.type) {\r\n    case 'MOVE_PLAYER2':{\r\n      return {...state, ...action.payload};\r\n    }\r\n    case 'ATTACK_PLAYER':{\r\n      return {...state, ...action.payload};\r\n    }\r\n    case 'DIALOGUE':{\r\n      return {...state, dialogue: false}\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default player2Reducer","\r\nconst initialState = {\r\n  spriteLocation: `200px 0px`,\r\n}\r\n\r\n// const chestReducer = (state=initialState, action) => {\r\n//   return{\r\n//     type: 'ANIMATE_STATIC',\r\n//     spriteLocation: `400px 0px`\r\n//   }\r\n// }\r\n\r\n\r\n\r\nconst chestReducer = (state=initialState, action) => {\r\n  switch(action.type) {\r\n    case 'ANIMATE_STATIC':{\r\n      return {...state, \r\n        spriteLocation: `400px 0px`\r\n        };\r\n    }\r\n    case 'ANIMATE_STATIC2':{\r\n      return {...state, \r\n        spriteLocation: `600px 0px`\r\n        };\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default chestReducer","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport playerReducer from '../features/player/reducer'\r\nimport mapReducer from '../features/map/reducer'\r\nimport player2Reducer from '../features/player2/reducer'\r\nimport chestReducer from '../features/animatedTile/reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  player: playerReducer,\r\n  player2: player2Reducer,\r\n  map: mapReducer,\r\n  chest: chestReducer\r\n})\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancer(applyMiddleware(thunk)),\r\n  );\r\n\r\nexport default store","export const SPRITE_HEIGHT = 360\r\nexport const SPRITE_WIDTH = 200\r\nexport const MAP_HEIGHT = SPRITE_HEIGHT * 10\r\nexport const MAP_WIDTH = SPRITE_WIDTH * 20","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport chest from './chest.png'\r\nimport animateTile from './animate'\r\n\r\nfunction Chest(props) {\r\n  return (\r\n    <div\r\n    style={{\r\n      position: 'absolute',\r\n      backgroundImage: `url('${chest}')`,\r\n      backgroundPosition: props.spriteLocation,\r\n      width: '200px',\r\n      height: '360px',\r\n\r\n    }}\r\n    />\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.chest,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(animateTile(Chest))","import React from 'react'\r\nimport tree from './tree.png'\r\n\r\nfunction Tree() {\r\n  return (\r\n    <div\r\n    style={{\r\n      position: 'relative',\r\n      bottom: '1080px',\r\n      left: '-320px',\r\n      flexShrink: '0',\r\n      zIndex: 1,\r\n      width:'800px',\r\n      height: '1440px',\r\n      backgroundImage: `url('${tree}')`,\r\n    }}\r\n    />\r\n  )\r\n}\r\n\r\n\r\nexport default Tree","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Chest from '../animatedTile'\r\nimport Tree from '../animatedTile/tree'\r\nimport {SPRITE_HEIGHT, SPRITE_WIDTH} from '../../config/constant'\r\n\r\nimport './styles.css'\r\n\r\nfunction MapTile(props) {\r\n  return <div \r\n  className={`tile ${getTileSprite(props.tile)}`}\r\n  style={{\r\n    height: SPRITE_HEIGHT,\r\n    width: SPRITE_WIDTH,\r\n  }}\r\n  >\r\n    {props.tile}\r\n    {getTileSprite(props.tile)}\r\n  </div>\r\n}\r\n\r\nfunction getTileSprite(type) {\r\n  switch(type) {\r\n    case 0:\r\n      return 'grass'\r\n    case 1:\r\n      return 'black'\r\n    case 2:\r\n      return 'downstairs'\r\n    case 3:\r\n      return 'upstairs'\r\n    case 5:\r\n      return 'rock'\r\n    case 6:\r\n      return <Tree />\r\n    case 7:\r\n      return 'rock2'\r\n    case 8:\r\n      return 'door'\r\n    default:\r\n  }\r\n}\r\n\r\nfunction MapRow(props) {\r\n  return <div className=\"row\">\r\n    {\r\n      props.tiles.map( tile => <MapTile tile={tile} />)\r\n    }\r\n  </div>\r\n}\r\n\r\nfunction Map(props) {\r\n  return (\r\n    <div\r\n    style={{\r\n      position:'absolute',\r\n      width: '4000px',\r\n      height: '3600px',\r\n      border: '4px solid white',\r\n      fontSize: 48,\r\n    }}      \r\n    >\r\n\r\n      {\r\n        props.tiles.map( row => <MapRow tiles={row} />)\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    tiles: state.map.tiles,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Map)","import _ from 'lodash'\r\nimport store from \"../../../config/store\"\r\nimport {\r\n  SPRITE_HEIGHT,\r\n  SPRITE_WIDTH,\r\n} from '../../../config/constant'\r\n\r\n\r\nconst HEIGHT = 10;\r\nconst WIDTH = 20;\r\nconst MAX_ROOMS = 10;\r\nconst ROOM_SIZE_RANGE = [2, 6];\r\n\r\nconst c= { HEIGHT, WIDTH, MAX_ROOMS, ROOM_SIZE_RANGE};\r\n\r\nconst createDungeon = () => {\r\n\r\nconst isValidRoomPlacement = (tiles, {x, y, width = 1, height = 1}) => {\r\n  // check if on the edge of or outside of the grid\r\n  if (y < 1 || y + height > tiles.length - 1) {\r\n    return false;\r\n  }\r\n  if (x < 1 || x + width > tiles[0].length - 1) {\r\n    return false;\r\n  }\r\n\r\n  // check if on or adjacent to existing room\r\n  for (let i = y - 1; i < y + height + 1; i++) {\r\n    for (let j = x - 1; j < x + width + 1; j++) {\r\n      if (tiles[i][j] === 1) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  // all grid cells are clear\r\n  return true;\r\n};\r\n\r\n\r\nlet tiles = [];\r\nfor (let i = 0; i < c.HEIGHT; i++) {\r\n  tiles.push([]);\r\n  for (let j = 0; j < c.WIDTH; j++) {\r\n    tiles[i].push(5)\r\n  }\r\n}\r\n\r\nconst createRoomsFromSeed = (tiles, {x, y, width, height}, range = c.ROOM_SIZE_RANGE) => {\r\n  // range for generating the random room heights and widths\r\n  const [min, max] = range;\r\n\r\n  // generate room values for each edge of the seed room\r\n  const roomValues = [];\r\n\r\n  const north = { height: _.random(min, max), width: _.random(min, max) };\r\n  north.x = _.random(x, x + width - 1);\r\n  north.y = y - north.height - 1;\r\n  north.doorx = _.random(north.x, (Math.min(north.x + north.width, x + width)) - 1);\r\n  north.doory = y - 1;\r\n  roomValues.push(north);\r\n\r\n  const east = { height: _.random(min, max), width: _.random(min, max) };\r\n  east.x = x + width + 1;\r\n  east.y = _.random(y, height + y - 1);\r\n  east.doorx = east.x - 1;\r\n  east.doory = _.random(east.y, (Math.min(east.y + east.height, y + height)) - 1);\r\n  roomValues.push(east);\r\n\r\n  const south = { height: _.random(min, max), width: _.random(min, max) };\r\n  south.x = _.random(x, width + x - 1);\r\n  south.y = y + height + 1;\r\n  south.doorx = _.random(south.x, (Math.min(south.x + south.width, x + width)) - 1);\r\n  south.doory = y + height;\r\n  roomValues.push(south);\r\n\r\n  const west = { height: _.random(min, max), width: _.random(min, max) };\r\n  west.x = x - west.width - 1;\r\n  west.y = _.random(y, height + y - 1);\r\n  west.doorx = x - 1;\r\n  west.doory = _.random(west.y, (Math.min(west.y + west.height, y + height)) - 1);\r\n  roomValues.push(west);\r\n\r\n  \r\n\r\n//dont forget you changed the doors to 0 while testing\r\n\r\n  const placedRooms = [];\r\n  roomValues.forEach(room => {\r\n    if (isValidRoomPlacement(tiles, room)) {\r\n      // place room\r\n      tiles = placeCells(tiles, room);\r\n      // place door\r\n      tiles = placeCells(tiles, {x: room.doorx, y: room.doory}, 0);\r\n      //TODO add a staircase or portal or whatever to get to next map\r\n      \r\n      // need placed room values for the next seeds\r\n      placedRooms.push(room);\r\n    }\r\n  });\r\n  return {tiles, placedRooms};\r\n};\r\n\r\n\r\nconst placeCells = (tiles, {x, y, width = 1, height = 1,}, tile = 1) => {\r\n  for (let i = y; i < y + height; i++) {\r\n    for (let j = x; j < x + width; j++) {\r\n      tiles[i][j] = tile;\r\n    }\r\n  }\r\n  return tiles;}\r\n\r\n  // Below is optional code for a randomly placed first room of a random size\r\n\r\n\t// 2. random values for the first area\r\n\t// const [min, max] = c.ROOM_SIZE_RANGE;\r\n\t// const firstRoom = {\r\n\t// \tx: _.random(1, c.WIDTH - max - 5),\r\n\t// \ty: _.random(1, c.HEIGHT - max - 5),\r\n\t// \theight: _.random(min, max),\r\n\t// \twidth: _.random(min, max)\r\n  // };\r\n\r\n  // Alternative first room placed at 0,0 to make sure the player is placed in the first room\r\n\r\n  const firstRoom = {\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t\theight: 2,\r\n\t\twidth: 2\r\n  };\r\n\r\n\r\n  tiles = placeCells(tiles, firstRoom);\r\n\r\n//  4. using the first room as a seed, recursivley add rooms to the grid\r\nconst growMap = (tiles, seedRooms, counter = 1, maxRooms = c.MAX_ROOMS) => {\r\n  if (counter + seedRooms.length > maxRooms || !seedRooms.length) {\r\n    return tiles;\r\n  }\r\n\r\n  tiles = createRoomsFromSeed(tiles, seedRooms.pop());\r\n  seedRooms.push(...tiles.placedRooms);\r\n  counter += tiles.placedRooms.length;\r\n  return growMap(tiles.tiles, seedRooms, counter);\r\n};\r\ngrowMap(tiles, [firstRoom]);\r\n  \r\n\r\n \r\n  let stairs = [3, 2]\r\n  while (stairs.length) {\r\n    const x = Math.floor(Math.random() * c.WIDTH);\r\n    const y = Math.floor(Math.random() * c.HEIGHT);\r\n    \r\n    if (tiles[y][x] === 1) {\r\n      // tiles = placeCells(tiles, {x: x, y: y}, stairs)\r\n      store.dispatch({\r\n        type: \"MOVE_PLAYER\",\r\n        payload: {\r\n          position: [x * SPRITE_WIDTH , y * SPRITE_HEIGHT]}\r\n      })\r\n      tiles[y][x] = stairs.pop();\r\n    }\r\n};\r\n\r\n\r\nreturn tiles\r\n}\r\n\r\nexport default createDungeon","export const tilesMapOne = [\r\n  [2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],\r\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],\r\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],\r\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],\r\n  [0,0,0,0,6,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,],\r\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],\r\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],\r\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],\r\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],\r\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],\r\n]","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport walkSprite from './sprite_shet_progress2.png'\r\nimport handleMovement from './movement'\r\n\r\nfunction Player(props) {\r\n  return (\r\n    <div\r\n    style={{\r\n      position: 'absolute',\r\n      top: props.position[1],\r\n      left: props.position[0],\r\n      backgroundImage: `url('${walkSprite}')`,\r\n      backgroundPosition: props.spriteLocation,\r\n      width: '200px',\r\n      height: '360px',\r\n\r\n    }}\r\n    />\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.player,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(handleMovement(Player))","import store from \"../../config/store\";\r\nimport createDungeon from \"../../data/maps/2\";\r\nimport { tilesMapOne } from \"../../data/maps/1\";\r\n\r\nimport {\r\n  SPRITE_HEIGHT,\r\n  SPRITE_WIDTH,\r\n  MAP_WIDTH,\r\n  MAP_HEIGHT\r\n} from \"../../config/constant\";\r\n\r\nexport default function handleMovement(player) {\r\n  function getNewPosition(oldPos, direction) {\r\n    switch (direction) {\r\n      case \"WEST\":\r\n        return [oldPos[0] - SPRITE_WIDTH, oldPos[1]];\r\n      case \"EAST\":\r\n        return [oldPos[0] + SPRITE_WIDTH, oldPos[1]];\r\n      case \"NORTH\":\r\n        return [oldPos[0], oldPos[1] - SPRITE_HEIGHT];\r\n      case \"SOUTH\":\r\n        return [oldPos[0], oldPos[1] + SPRITE_HEIGHT];\r\n      default:\r\n    }\r\n  }\r\n\r\n  function observerBoundaries(oldPos, newPos) {\r\n    return (\r\n      newPos[0] >= 0 &&\r\n      newPos[0] <= MAP_WIDTH - SPRITE_WIDTH &&\r\n      newPos[1] >= 0 &&\r\n      newPos[1] <= MAP_HEIGHT - SPRITE_HEIGHT\r\n    );\r\n  }\r\n\r\n  function observeImpassable(oldPos, newPos) {\r\n    const tiles = store.getState().map.tiles;\r\n    const y = newPos[1] / SPRITE_HEIGHT;\r\n    const x = newPos[0] / SPRITE_WIDTH;\r\n    const nextTile = tiles[y][x];\r\n    return nextTile < 5;\r\n  }\r\n\r\n  function interact() {\r\n    const tiles = store.getState().map.tiles;\r\n    const facing = store.getState().player.facingPosition;\r\n    const otherPlayerPos = store.getState().player2.position;\r\n    const otherPlayerY = otherPlayerPos[1];\r\n    const otherPlayerX = otherPlayerPos[0];\r\n\r\n    let y = facing[1] / SPRITE_HEIGHT;\r\n    if (y < 0) y = 0;\r\n    let x = facing[0] / SPRITE_WIDTH;\r\n    if (x < 0) x = 0;\r\n    const interactTile = tiles[y][x];\r\n    if (facing[0] === otherPlayerX && facing[1] === otherPlayerY) {\r\n      store.dispatch({\r\n        type: \"MOVE_PLAYER2\",\r\n        payload: {\r\n          dialogue: true\r\n        }\r\n      });\r\n    } else if (interactTile === 2) {\r\n      animateTile();\r\n    } else return;\r\n  }\r\n\r\n  //determine if you are standing on stairs and use them\r\n  // 3 is up and 2 is down\r\n  //finally got this working!\r\n\r\n  function stairs() {\r\n    const tiles = store.getState().map.tiles;\r\n    const pos = store.getState().player.position;\r\n    const y = pos[1] / SPRITE_HEIGHT;\r\n    const x = pos[0] / SPRITE_WIDTH;\r\n    const currentPos = tiles[y][x];\r\n    let level = store.getState().map.level;\r\n\r\n    if (currentPos === 3 && level !== 1) {\r\n      sessionStorage.setItem(\"stairsup\" + level, JSON.stringify(pos));\r\n      sessionStorage.setItem(\"level\" + level, JSON.stringify(tiles));\r\n      store.dispatch({\r\n        type: \"ADD_TILES\",\r\n        payload: {\r\n          tiles: JSON.parse(sessionStorage.getItem(\"level\" + (level - 1))),\r\n          level: (level -= 1)\r\n        }\r\n      });\r\n      store.dispatch({\r\n        type: \"MOVE_PLAYER\",\r\n        payload: {\r\n          position: JSON.parse(sessionStorage.getItem(\"leveldown\" + level))\r\n        }\r\n      });\r\n    } else if (currentPos === 3 && level === 1) {\r\n      sessionStorage.setItem(\"stairsup\" + level, JSON.stringify(pos));\r\n      sessionStorage.setItem(\"level\" + level, JSON.stringify(tiles));\r\n      store.dispatch({\r\n        type: \"ADD_TILES\",\r\n        payload: {\r\n          tiles: tilesMapOne,\r\n          level: (level -= 1)\r\n        }\r\n      });\r\n      store.dispatch({\r\n        type: \"MOVE_PLAYER\",\r\n        payload: {\r\n          position: [0,0]\r\n        }\r\n      });\r\n    }\r\n\r\n    //not sure what is going on here, figure this out\r\n    //needs to check the existence of a level below, sessionstorage.level + 1\r\n    //which is to say the\r\n    else if (currentPos === 2 && sessionStorage['level' + (level + 1)]) {\r\n      //alert(sessionStorage['level' + (level + 1)])\r\n      //and this should be saving the tiles as you leave\r\n      //which is to say one of them probably isn't needed\r\n      sessionStorage.setItem(\"level\" + level, JSON.stringify(tiles));\r\n\r\n      //this remembers where the stairs were so when you come back up you are on them\r\n      sessionStorage.setItem(\"leveldown\" + level, JSON.stringify(pos));\r\n      store.dispatch({\r\n        type: \"ADD_TILES\",\r\n        payload: {\r\n          tiles: JSON.parse(sessionStorage.getItem(\"level\" + (level + 1))),\r\n          level: (level += 1)\r\n        }\r\n      });\r\n      store.dispatch({\r\n        type: \"MOVE_PLAYER\",\r\n        payload: {\r\n          position: JSON.parse(sessionStorage.getItem(\"stairsup\" + level)),\r\n        }\r\n      });\r\n      sessionStorage.setItem(\"level\" + level, JSON.stringify(tiles));\r\n\r\n      //this should be saving the tiles as you enter the level\r\n\r\n      //sessionStorage.setItem(\"level\" + level, JSON.stringify(tiles));\r\n    }\r\n\r\n    else if (currentPos === 2) {\r\n      //alert(sessionStorage['level' + (level + 1)])\r\n      //and this should be saving the tiles as you leave\r\n      //which is to say one of them probably isn't needed\r\n      sessionStorage.setItem(\"level\" + level, JSON.stringify(tiles));\r\n\r\n      //this remembers where the stairs were so when you come back up you are on them\r\n      sessionStorage.setItem(\"leveldown\" + level, JSON.stringify(pos));\r\n      store.dispatch({\r\n        type: \"ADD_TILES\",\r\n        payload: {\r\n          tiles: createDungeon(),\r\n          level: (level += 1)\r\n        }\r\n      });\r\n\r\n      //this should be saving the tiles as you enter the level althout i don't think this is working\r\n\r\n      \r\n    }\r\n  }\r\n\r\n  function dispatchMove(direction, newPos) {\r\n    const walkIndex = getWalkIndex();\r\n    store.dispatch({\r\n      type: \"MOVE_PLAYER\",\r\n      payload: {\r\n        position: newPos,\r\n        direction,\r\n        walkIndex,\r\n        spriteLocation: getSpriteLocation(direction, walkIndex)\r\n      }\r\n    });\r\n  }\r\n\r\n  function dispatchAttack() {\r\n    const health = getHealth();\r\n    store.dispatch({\r\n      type: \"ATTACK_PLAYER\",\r\n      payload: {\r\n        health\r\n      }\r\n    });\r\n  }\r\n\r\n  function getHealth() {\r\n    const health = store.getState().player2.health;\r\n    return health - 1;\r\n  }\r\n\r\n  function compareLocations(newPos) {\r\n    const otherPlayerPos = store.getState().player2.position;\r\n    const otherPlayerY = otherPlayerPos[1];\r\n    const otherPlayerX = otherPlayerPos[0];\r\n    return newPos[1] === otherPlayerY && newPos[0] === otherPlayerX;\r\n  }\r\n\r\n  function determineFacing() {\r\n    let direction = store.getState().player.direction;\r\n    let position = store.getState().player.position;\r\n    switch (direction) {\r\n      case \"SOUTH\":\r\n        return [position[0], position[1] + SPRITE_HEIGHT];\r\n      case \"NORTH\":\r\n        return [position[0], position[1] - SPRITE_HEIGHT];\r\n      case \"EAST\":\r\n        return [position[0] + SPRITE_WIDTH, position[1]];\r\n      case \"WEST\":\r\n        return [position[0] - SPRITE_WIDTH, position[1]];\r\n      default:\r\n    }\r\n  }\r\n\r\n  function updateFacing(oldPos, direction) {\r\n    store.dispatch({\r\n      type: \"MOVE_PLAYER\",\r\n      payload: {\r\n        facingPosition: determineFacing()\r\n      }\r\n    });\r\n  }\r\n\r\n  // function delayedDispatch(direction, newPos) {\r\n  //   setTimeout(() =>\r\n  //   {\r\n  //   const walkIndex = getWalkIndex();\r\n  //   store.dispatch({\r\n  //     type: \"MOVE_PLAYER\",\r\n  //     payload: {\r\n  //       position: newPos,\r\n  //       direction,\r\n  //       walkIndex,\r\n  //       spriteLocation: getSpriteLocation(direction, walkIndex),\r\n  //     }\r\n  //   });\r\n  // }\r\n  //   , 1000);}\r\n\r\n  function attemptMove(direction) {\r\n    setTimeout(() => {\r\n      const oldPos = store.getState().player.position;\r\n      const newPos = getNewPosition(oldPos, direction);\r\n      const walkIndex = store.getState().player.walkIndex;\r\n\r\n      store.dispatch({\r\n        type: \"MOVE_PLAYER\",\r\n        payload: {\r\n          direction,\r\n          spriteLocation: getSpriteLocation(direction, walkIndex),\r\n          facingPosition: determineFacing()\r\n        }\r\n      });\r\n\r\n      if (\r\n        observerBoundaries(oldPos, newPos) &&\r\n        observeImpassable(oldPos, newPos) &&\r\n        !compareLocations(newPos)\r\n      ) {\r\n        dispatchMove(direction, newPos);\r\n        updateFacing();\r\n      } else if (\r\n        observerBoundaries(oldPos, newPos) &&\r\n        observeImpassable(oldPos, newPos) &&\r\n        compareLocations(newPos)\r\n      ) {\r\n        dispatchAttack();\r\n        updateFacing();\r\n      }\r\n    }, 30);\r\n  }\r\n\r\n  function handleKeyDown(e) {\r\n    e.preventDefault();\r\n    switch (e.keyCode) {\r\n      case 32:\r\n        return interact();\r\n      case 37:\r\n        return attemptMove(\"WEST\");\r\n      case 38:\r\n        return attemptMove(\"NORTH\");\r\n      case 39:\r\n        return attemptMove(\"EAST\");\r\n      case 40:\r\n        return attemptMove(\"SOUTH\");\r\n      case 190:\r\n        return stairs();\r\n      default:\r\n        console.log(e.keyCode);\r\n    }\r\n  }\r\n\r\n  //   function startRandomMovement(e) {\r\n  //     let randomDirection = [\"SOUTH\", \"NORTH\", \"EAST\", \"WEST\"]\r\n  //     e.preventDefault();\r\n  //     if (e) {\r\n  //       setInterval(()=>{attemptMove(randomDirection[Math.floor(Math.random()*randomDirection.length)])}, 1000)\r\n  //   }\r\n  // }\r\n\r\n  // function animate(direction, walkIndex){\r\n  //   setTimeout(() =>\r\n  //   { getSpriteLocation(direction, walkIndex);\r\n  //   }, 100);}\r\n\r\n  function getSpriteLocation(direction, walkIndex) {\r\n    switch (direction) {\r\n      case \"NORTH\":\r\n        return `${SPRITE_WIDTH * walkIndex}px ${SPRITE_HEIGHT * 1}px`;\r\n      case \"EAST\":\r\n        return `${SPRITE_WIDTH * walkIndex}px ${SPRITE_HEIGHT * 2}px`;\r\n      case \"WEST\":\r\n        return `${SPRITE_WIDTH * walkIndex}px ${SPRITE_HEIGHT * 3}px`;\r\n      case \"SOUTH\":\r\n        return `${SPRITE_WIDTH * walkIndex}px ${SPRITE_HEIGHT * 4}px`;\r\n      default:\r\n    }\r\n  }\r\n\r\n  function getWalkIndex() {\r\n    const walkIndex = store.getState().player.walkIndex;\r\n    return walkIndex >= 3 ? 1 : walkIndex + 1;\r\n  }\r\n\r\n  window.addEventListener(\"keydown\", e => {\r\n    handleKeyDown(e);\r\n  });\r\n\r\n  function animateTile() {\r\n    store.dispatch(function(dispatch) {\r\n      setTimeout(() => {\r\n        dispatch({ type: \"ANIMATE_STATIC\" });\r\n      }, 500);\r\n      setTimeout(() => {\r\n        dispatch({ type: \"ANIMATE_STATIC2\" });\r\n      }, 1000);\r\n    });\r\n  }\r\n  return player;\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction DisplayLevel(props) {\r\n  return (\r\n  <h1 style={{color:'white'}}> Current Dungeon Level: {props.level}<br />\r\n  Move with the arrow keys, operate stairs with \".\" and space to interact</h1>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.map,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(DisplayLevel)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction Dialogue(props){\r\n  return (\r\n    <div\r\n    style={{\r\n      position: 'absolute',\r\n      top: props.position[1],\r\n      left: props.position[0],\r\n      backgroundColor: 'brown',\r\n      width: '800px',\r\n      height: '720px',\r\n    }}>\r\n      <button\r\n      onClick={() => props.dispatch({ type: 'DIALOGUE'})}\r\n      style={{\r\n        fontSize: 72,\r\n      }}\r\n      >X</button>\r\n      <p style={{fontSize: 50}}>Now I can start and stop but I seem to take some time about stopping</p>\r\n      </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.player2,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dialogue)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport walkSprite from './sprite_shet_progress2.png'\r\nimport handleMovement from './movement'\r\nimport Dialogue from './dialogue'\r\n\r\nfunction Player2(props) {\r\n  return (\r\n    <div>\r\n    <div\r\n    style={{\r\n      position: 'absolute',\r\n      top: props.position[1],\r\n      left: props.position[0],\r\n      backgroundImage: `url('${walkSprite}')`,\r\n      backgroundPosition: props.spriteLocation,\r\n      width: '200px',\r\n      height: '360px',\r\n\r\n    }}\r\n    />\r\n    { props.dialogue ? <Dialogue /> : null }\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.player2,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(handleMovement(Player2))","import store from \"../../config/store\";\r\nimport {\r\n  SPRITE_HEIGHT,\r\n  SPRITE_WIDTH,\r\n  MAP_WIDTH,\r\n  MAP_HEIGHT\r\n} from \"../../config/constant\";\r\n\r\nexport default function handleMovement(player2) {\r\n  function getNewPosition(oldPos, direction) {\r\n    switch (direction) {\r\n      case \"WEST\":\r\n        return [oldPos[0] - SPRITE_WIDTH, oldPos[1]];\r\n      case \"EAST\":\r\n        return [oldPos[0] + SPRITE_WIDTH, oldPos[1]];\r\n      case \"NORTH\":\r\n        return [oldPos[0], oldPos[1] - SPRITE_HEIGHT];\r\n      case \"SOUTH\":\r\n        return [oldPos[0], oldPos[1] + SPRITE_HEIGHT];\r\n      default:\r\n    }\r\n  }\r\n\r\n  function observerBoundaries(oldPos, newPos) {\r\n    return (\r\n      newPos[0] >= 0 &&\r\n      newPos[0] <= MAP_WIDTH - SPRITE_WIDTH &&\r\n      (newPos[1] >= 0 && newPos[1] <= MAP_HEIGHT - SPRITE_HEIGHT)\r\n    );\r\n  }\r\n\r\n  function observeImpassable(oldPos, newPos) {\r\n    const tiles = store.getState().map.tiles;\r\n    const y = newPos[1] / SPRITE_HEIGHT;\r\n    const x = newPos[0] / SPRITE_WIDTH;\r\n    const nextTile = tiles[y][x];\r\n    return nextTile < 5;\r\n  }\r\n\r\n  function dispatchMove(direction, newPos) {\r\n    const walkIndex = getWalkIndex();\r\n    store.dispatch({\r\n      type: \"MOVE_PLAYER2\",\r\n      payload: {\r\n        position: newPos,\r\n        direction,\r\n        walkIndex,\r\n        spriteLocation: getSpriteLocation(direction, walkIndex)\r\n      }\r\n    });\r\n  }\r\n\r\n  function dispatchAttack() {\r\n    const health = getHealth();\r\n    store.dispatch({\r\n      type: \"ATTACK_PLAYER2\",\r\n      payload: {\r\n        health\r\n      }\r\n    });\r\n  }\r\n\r\n  function getHealth() {\r\n    const health = store.getState().player.health;\r\n    return health - 1;\r\n  }\r\n\r\n  function compareLocations(newPos) {\r\n    const otherPlayerPos = store.getState().player.position;\r\n    const otherPlayerY = otherPlayerPos[1];\r\n    const otherPlayerX = otherPlayerPos[0];\r\n    return newPos[1] === otherPlayerY && newPos[0] === otherPlayerX;\r\n  }\r\n\r\n  function attemptMove(direction) {\r\n    const oldPos = store.getState().player2.position;\r\n    const newPos = getNewPosition(oldPos, direction);\r\n\r\n    if (\r\n      observerBoundaries(oldPos, newPos) &&\r\n      observeImpassable(oldPos, newPos) &&\r\n      !compareLocations(newPos)\r\n    ) {\r\n      dispatchMove(direction, newPos);\r\n    } else if (\r\n      observerBoundaries(oldPos, newPos) &&\r\n      observeImpassable(oldPos, newPos) &&\r\n      compareLocations(newPos)\r\n    ) {\r\n      dispatchAttack();\r\n    }\r\n  }\r\n\r\n  // function handleKeyDown(e) {\r\n  //   e.preventDefault();\r\n  //   switch (e.keyCode) {\r\n  //     case 37:\r\n  //       return attemptMove(\"WEST\");\r\n  //     case 38:\r\n  //       return attemptMove(\"NORTH\");\r\n  //     case 39:\r\n  //       return attemptMove(\"EAST\");\r\n  //     case 40:\r\n  //       return attemptMove(\"SOUTH\");\r\n  //     default:\r\n  //       console.log(e.keyCode);\r\n  //   }\r\n  // }\r\n\r\n  // function startPlayer2(e) {\r\n  //   e.preventDefault();\r\n  //   if (e) {startRandomMovement()}\r\n  // }\r\n  \r\n  const randomDirection = [\"SOUTH\", \"NORTH\", \"EAST\", \"WEST\"];\r\n    const intervalID = setInterval(() => {\r\n        testing(\r\n          randomDirection[Math.floor(Math.random() * randomDirection.length)]\r\n        );\r\n      }, 500);\r\n\r\n  function testing() {\r\n    let isMoving = store.getState().player2.dialogue;\r\n    if (!isMoving){\r\n    setTimeout(() => {\r\n          attemptMove(\r\n            randomDirection[Math.floor(Math.random() * randomDirection.length)]\r\n          );\r\n        }, 2000);\r\n  }\r\n};\r\n  \r\n\r\n  function getSpriteLocation(direction, walkIndex) {\r\n    switch (direction) {\r\n      case \"NORTH\":\r\n        return `${SPRITE_WIDTH * walkIndex}px ${SPRITE_HEIGHT * 1}px`;\r\n      case \"EAST\":\r\n        return `${SPRITE_WIDTH * walkIndex}px ${SPRITE_HEIGHT * 2}px`;\r\n      case \"WEST\":\r\n        return `${SPRITE_WIDTH * walkIndex}px ${SPRITE_HEIGHT * 3}px`;\r\n      case \"SOUTH\":\r\n        return `${SPRITE_WIDTH * walkIndex}px ${SPRITE_HEIGHT * 4}px`;\r\n      default:\r\n    }\r\n  }\r\n\r\n  function getWalkIndex() {\r\n    const walkIndex = store.getState().player2.walkIndex;\r\n    return walkIndex >= 2 ? 0 : walkIndex + 1;\r\n  }\r\n\r\n  // window.onload = startRandomMovement();\r\n\r\n  return player2;\r\n}\r\n","import React from \"react\";\r\nimport Map from \"../map\";\r\nimport { connect } from 'react-redux'\r\nimport Player from \"../player\";\r\nimport DisplayLevel from './DisplayLevel'\r\n\r\nimport createDungeon from \"../../data/maps/2\";\r\nimport store from \"../../config/store\";\r\nimport Player2 from \"../player2\";\r\n\r\n\r\n//the createdungeon function draws a new map and loads it to the tiles\r\n\r\nfunction World(props) {\r\n  store.dispatch({\r\n    type: \"ADD_TILES\",\r\n    payload: {\r\n      tiles: createDungeon()\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <DisplayLevel />\r\n      <div\r\n        style={{\r\n          position: \"relative\",\r\n          width: \"4000px\",\r\n          height: \"3600px\",\r\n          margin: \"20px auto\"\r\n        }}\r\n      >\r\n        <Map />\r\n        <Player />\r\n        <Player2 />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default World\r\n","import React from \"react\";\nimport World from \"./features/world\";\n\nfunction App() {\n  return (\n    <div>\n      <World />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n\nimport store from './config/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}